NAME         top
       bash - GNU Bourne-Again SHell
SYNOPSIS         top
       bash [options] [command_string | file]
COPYRIGHT         top
       Bash is Copyright (C) 1989-2020 by the Free Software Foundation,
       Inc.
DESCRIPTION         top
       Bash is an sh-compatible command language interpreter that
       executes commands read from the standard input or from a file.
       Bash also incorporates useful features from the Korn and C shells
       (ksh and csh).

       Bash is intended to be a conformant implementation of the Shell
       and Utilities portion of the IEEE POSIX specification (IEEE
       Standard 1003.1).  Bash can be configured to be POSIX-conformant
       by default.
OPTIONS         top
       All of the single-character shell options documented in the
       description of the set builtin command, including -o, can be used
       as options when the shell is invoked.  In addition, bash
       interprets the following options when it is invoked:

       -c     If the -c option is present, then commands are read from
              the first non-option argument command_string.  If there
              are arguments after the command_string, the first argument
              is assigned to $0 and any remaining arguments are assigned
              to the positional parameters.  The assignment to $0 sets
              the name of the shell, which is used in warning and error
              messages.
       -i     If the -i option is present, the shell is interactive.
       -l     Make bash act as if it had been invoked as a login shell
              (see INVOCATION below).
       -r     If the -r option is present, the shell becomes restricted
              (see RESTRICTED SHELL below).
       -s     If the -s option is present, or if no arguments remain
              after option processing, then commands are read from the
              standard input.  This option allows the positional
              parameters to be set when invoking an interactive shell or
              when reading input through a pipe.
       -D     A list of all double-quoted strings preceded by $ is
              printed on the standard output.  These are the strings
              that are subject to language translation when the current
              locale is not C or POSIX.  This implies the -n option; no
              commands will be executed.
       [-+]O [shopt_option]
              shopt_option is one of the shell options accepted by the
              shopt builtin (see SHELL BUILTIN COMMANDS below).  If
              shopt_option is present, -O sets the value of that option;
              +O unsets it.  If shopt_option is not supplied, the names
              and values of the shell options accepted by shopt are
              printed on the standard output.  If the invocation option
              is +O, the output is displayed in a format that may be
              reused as input.
       --     A -- signals the end of options and disables further
              option processing.  Any arguments after the -- are treated
              as filenames and arguments.  An argument of - is
              equivalent to --.

       Bash also interprets a number of multi-character options.  These
       options must appear on the command line before the single-
       character options to be recognized.

       --debugger
              Arrange for the debugger profile to be executed before the
              shell starts.  Turns on extended debugging mode (see the
              description of the extdebug option to the shopt builtin
              below).
       --dump-po-strings
              Equivalent to -D, but the output is in the GNU gettext po
              (portable object) file format.
       --dump-strings
              Equivalent to -D.
       --help Display a usage message on standard output and exit
              successfully.
       --init-file file
       --rcfile file
              Execute commands from file instead of the standard
              personal initialization file ~/.bashrc if the shell is
              interactive (see INVOCATION below).

       --login
              Equivalent to -l.

       --noediting
              Do not use the GNU readline library to read command lines
              when the shell is interactive.

       --noprofile
              Do not read either the system-wide startup file
              /etc/profile or any of the personal initialization files
              ~/.bash_profile, ~/.bash_login, or ~/.profile.  By
              default, bash reads these files when it is invoked as a
              login shell (see INVOCATION below).

       --norc Do not read and execute the personal initialization file
              ~/.bashrc if the shell is interactive.  This option is on
              by default if the shell is invoked as sh.

       --posix
              Change the behavior of bash where the default operation
              differs from the POSIX standard to match the standard
              (posix mode).  See SEE ALSO below for a reference to a
              document that details how posix mode affects bash's
              behavior.

       --restricted
              The shell becomes restricted (see RESTRICTED SHELL below).

       --verbose
              Equivalent to -v.

       --version
              Show version information for this instance of bash on the
              standard output and exit successfully.
ARGUMENTS         top
       If arguments remain after option processing, and neither the -c
       nor the -s option has been supplied, the first argument is
       assumed to be the name of a file containing shell commands.  If
       bash is invoked in this fashion, $0 is set to the name of the
       file, and the positional parameters are set to the remaining
       arguments.  Bash reads and executes commands from this file, then
       exits.  Bash's exit status is the exit status of the last command
       executed in the script.  If no commands are executed, the exit
       status is 0.  An attempt is first made to open the file in the
       current directory, and, if no file is found, then the shell
       searches the directories in PATH for the script.
